name: Release (Docker)

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:

env:
  IMAGE_NAME: worker-vllm

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      id-token: write
    env:
      # Mirror secrets into env so we can check them in expressions and shell
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Extract version from tag
        id: ver
        run: |
          TAG="${GITHUB_REF#refs/tags/}"     # e.g. v1.2.3
          VER="${TAG#v}"                     # 1.2.3
          echo "tag=${TAG}" >> "$GITHUB_OUTPUT"
          echo "version=${VER}" >> "$GITHUB_OUTPUT"
          echo "major_minor=${VER%.*}" >> "$GITHUB_OUTPUT"
          echo "major=${VER%%.*}" >> "$GITHUB_OUTPUT"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to Docker Hub (optional)
        if: ${{ env.DOCKERHUB_USERNAME != '' && env.DOCKERHUB_TOKEN != '' }}
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ env.DOCKERHUB_TOKEN }}

      - name: Compute image list
        id: img
        run: |
          GHCR_IMAGE="ghcr.io/${GITHUB_REPOSITORY_OWNER}/${IMAGE_NAME}"
          IMAGES="$GHCR_IMAGE"
          if [ -n "${DOCKERHUB_USERNAME}" ]; then
            DH_IMAGE="${DOCKERHUB_USERNAME}/${IMAGE_NAME}"
            IMAGES="$IMAGES"$'\n'"$DH_IMAGE"
          fi
          echo "images<<EOF" >> "$GITHUB_OUTPUT"
          echo "$IMAGES" >> "$GITHUB_OUTPUT"
          echo "EOF" >> "$GITHUB_OUTPUT"

      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ steps.img.outputs.images }}
          tags: |
            type=raw,value=latest
            type=semver,pattern={{version}},value=${{ steps.ver.outputs.version }}
            type=semver,pattern={{major}}.{{minor}},value=${{ steps.ver.outputs.version }}
            type=semver,pattern={{major}},value=${{ steps.ver.outputs.version }}
          labels: |
            org.opencontainers.image.title=${{ env.IMAGE_NAME }}
            org.opencontainers.image.version=${{ steps.ver.outputs.version }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.source=https://github.com/${{ github.repository }}

      - name: Build and push (multi-arch)
        id: build
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          sbom: true
          provenance: mode=max
          build-args: |
            GIT_SHA=${{ github.sha }}

      - name: Summarize images
        run: |
          echo "## Published Images" >> "$GITHUB_STEP_SUMMARY"
          while IFS= read -r IMAGE; do
            echo "- \`${IMAGE}@${{ steps.build.outputs.digest }}\`" >> "$GITHUB_STEP_SUMMARY"
          done <<< "${{ steps.img.outputs.images }}"

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.ver.outputs.tag }}
          generate_release_notes: true
          body: |
            ## Container Images
            ${{ steps.img.outputs.images }}:
            - ${{ steps.ver.outputs.version }}
            - ${{ steps.ver.outputs.major_minor }}
            - ${{ steps.ver.outputs.major }}
            - latest

            **Digest:** ${{ steps.build.outputs.digest }}
